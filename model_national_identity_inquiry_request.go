/*
Zibal API

Combined API for Zibal Gateway and Facilities (Verification, Wallet, etc.)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zibal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NationalIdentityInquiryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NationalIdentityInquiryRequest{}

// NationalIdentityInquiryRequest struct for NationalIdentityInquiryRequest
type NationalIdentityInquiryRequest struct {
	NationalCode string `json:"nationalCode"`
	BirthDate string `json:"birthDate"`
}

type _NationalIdentityInquiryRequest NationalIdentityInquiryRequest

// NewNationalIdentityInquiryRequest instantiates a new NationalIdentityInquiryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNationalIdentityInquiryRequest(nationalCode string, birthDate string) *NationalIdentityInquiryRequest {
	this := NationalIdentityInquiryRequest{}
	this.NationalCode = nationalCode
	this.BirthDate = birthDate
	return &this
}

// NewNationalIdentityInquiryRequestWithDefaults instantiates a new NationalIdentityInquiryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNationalIdentityInquiryRequestWithDefaults() *NationalIdentityInquiryRequest {
	this := NationalIdentityInquiryRequest{}
	return &this
}

// GetNationalCode returns the NationalCode field value
func (o *NationalIdentityInquiryRequest) GetNationalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NationalCode
}

// GetNationalCodeOk returns a tuple with the NationalCode field value
// and a boolean to check if the value has been set.
func (o *NationalIdentityInquiryRequest) GetNationalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NationalCode, true
}

// SetNationalCode sets field value
func (o *NationalIdentityInquiryRequest) SetNationalCode(v string) {
	o.NationalCode = v
}

// GetBirthDate returns the BirthDate field value
func (o *NationalIdentityInquiryRequest) GetBirthDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field value
// and a boolean to check if the value has been set.
func (o *NationalIdentityInquiryRequest) GetBirthDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BirthDate, true
}

// SetBirthDate sets field value
func (o *NationalIdentityInquiryRequest) SetBirthDate(v string) {
	o.BirthDate = v
}

func (o NationalIdentityInquiryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NationalIdentityInquiryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nationalCode"] = o.NationalCode
	toSerialize["birthDate"] = o.BirthDate
	return toSerialize, nil
}

func (o *NationalIdentityInquiryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nationalCode",
		"birthDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNationalIdentityInquiryRequest := _NationalIdentityInquiryRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNationalIdentityInquiryRequest)

	if err != nil {
		return err
	}

	*o = NationalIdentityInquiryRequest(varNationalIdentityInquiryRequest)

	return err
}

type NullableNationalIdentityInquiryRequest struct {
	value *NationalIdentityInquiryRequest
	isSet bool
}

func (v NullableNationalIdentityInquiryRequest) Get() *NationalIdentityInquiryRequest {
	return v.value
}

func (v *NullableNationalIdentityInquiryRequest) Set(val *NationalIdentityInquiryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNationalIdentityInquiryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNationalIdentityInquiryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNationalIdentityInquiryRequest(val *NationalIdentityInquiryRequest) *NullableNationalIdentityInquiryRequest {
	return &NullableNationalIdentityInquiryRequest{value: val, isSet: true}
}

func (v NullableNationalIdentityInquiryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNationalIdentityInquiryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


