/*
Zibal API

Combined API for Zibal Gateway and Facilities (Verification, Wallet, etc.)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zibal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentInitResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentInitResponse{}

// PaymentInitResponse struct for PaymentInitResponse
type PaymentInitResponse struct {
	TrackId int64 `json:"trackId"`
	// result
	Result int32 `json:"result"`
	Message string `json:"message"`
}

type _PaymentInitResponse PaymentInitResponse

// NewPaymentInitResponse instantiates a new PaymentInitResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInitResponse(trackId int64, result int32, message string) *PaymentInitResponse {
	this := PaymentInitResponse{}
	this.TrackId = trackId
	this.Result = result
	this.Message = message
	return &this
}

// NewPaymentInitResponseWithDefaults instantiates a new PaymentInitResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInitResponseWithDefaults() *PaymentInitResponse {
	this := PaymentInitResponse{}
	return &this
}

// GetTrackId returns the TrackId field value
func (o *PaymentInitResponse) GetTrackId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TrackId
}

// GetTrackIdOk returns a tuple with the TrackId field value
// and a boolean to check if the value has been set.
func (o *PaymentInitResponse) GetTrackIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackId, true
}

// SetTrackId sets field value
func (o *PaymentInitResponse) SetTrackId(v int64) {
	o.TrackId = v
}

// GetResult returns the Result field value
func (o *PaymentInitResponse) GetResult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *PaymentInitResponse) GetResultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *PaymentInitResponse) SetResult(v int32) {
	o.Result = v
}

// GetMessage returns the Message field value
func (o *PaymentInitResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PaymentInitResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PaymentInitResponse) SetMessage(v string) {
	o.Message = v
}

func (o PaymentInitResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentInitResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["trackId"] = o.TrackId
	toSerialize["result"] = o.Result
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *PaymentInitResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"trackId",
		"result",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentInitResponse := _PaymentInitResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentInitResponse)

	if err != nil {
		return err
	}

	*o = PaymentInitResponse(varPaymentInitResponse)

	return err
}

type NullablePaymentInitResponse struct {
	value *PaymentInitResponse
	isSet bool
}

func (v NullablePaymentInitResponse) Get() *PaymentInitResponse {
	return v.value
}

func (v *NullablePaymentInitResponse) Set(val *PaymentInitResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInitResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInitResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInitResponse(val *PaymentInitResponse) *NullablePaymentInitResponse {
	return &NullablePaymentInitResponse{value: val, isSet: true}
}

func (v NullablePaymentInitResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInitResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


