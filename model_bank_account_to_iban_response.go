/*
Zibal API

Combined API for Zibal Gateway and Facilities (Verification, Wallet, etc.)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zibal

import (
	"encoding/json"
)

// checks if the BankAccountToIbanResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BankAccountToIbanResponse{}

// BankAccountToIbanResponse struct for BankAccountToIbanResponse
type BankAccountToIbanResponse struct {
	Result *int32 `json:"result,omitempty"`
	Message *string `json:"message,omitempty"`
	Data *BankAccountToIbanResponseData `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BankAccountToIbanResponse BankAccountToIbanResponse

// NewBankAccountToIbanResponse instantiates a new BankAccountToIbanResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankAccountToIbanResponse() *BankAccountToIbanResponse {
	this := BankAccountToIbanResponse{}
	return &this
}

// NewBankAccountToIbanResponseWithDefaults instantiates a new BankAccountToIbanResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankAccountToIbanResponseWithDefaults() *BankAccountToIbanResponse {
	this := BankAccountToIbanResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *BankAccountToIbanResponse) GetResult() int32 {
	if o == nil || IsNil(o.Result) {
		var ret int32
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountToIbanResponse) GetResultOk() (*int32, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *BankAccountToIbanResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given int32 and assigns it to the Result field.
func (o *BankAccountToIbanResponse) SetResult(v int32) {
	o.Result = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *BankAccountToIbanResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountToIbanResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *BankAccountToIbanResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *BankAccountToIbanResponse) SetMessage(v string) {
	o.Message = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BankAccountToIbanResponse) GetData() BankAccountToIbanResponseData {
	if o == nil || IsNil(o.Data) {
		var ret BankAccountToIbanResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountToIbanResponse) GetDataOk() (*BankAccountToIbanResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BankAccountToIbanResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given BankAccountToIbanResponseData and assigns it to the Data field.
func (o *BankAccountToIbanResponse) SetData(v BankAccountToIbanResponseData) {
	o.Data = &v
}

func (o BankAccountToIbanResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankAccountToIbanResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BankAccountToIbanResponse) UnmarshalJSON(data []byte) (err error) {
	varBankAccountToIbanResponse := _BankAccountToIbanResponse{}

	err = json.Unmarshal(data, &varBankAccountToIbanResponse)

	if err != nil {
		return err
	}

	*o = BankAccountToIbanResponse(varBankAccountToIbanResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		delete(additionalProperties, "message")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBankAccountToIbanResponse struct {
	value *BankAccountToIbanResponse
	isSet bool
}

func (v NullableBankAccountToIbanResponse) Get() *BankAccountToIbanResponse {
	return v.value
}

func (v *NullableBankAccountToIbanResponse) Set(val *BankAccountToIbanResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBankAccountToIbanResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBankAccountToIbanResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankAccountToIbanResponse(val *BankAccountToIbanResponse) *NullableBankAccountToIbanResponse {
	return &NullableBankAccountToIbanResponse{value: val, isSet: true}
}

func (v NullableBankAccountToIbanResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankAccountToIbanResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


