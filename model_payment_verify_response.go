/*
Zibal API

Combined API for Zibal Gateway and Facilities (Verification, Wallet, etc.)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zibal

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PaymentVerifyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentVerifyResponse{}

// PaymentVerifyResponse struct for PaymentVerifyResponse
type PaymentVerifyResponse struct {
	// ISODate
	PaidAt *time.Time `json:"paidAt,omitempty"`
	// مبلغ سفارش (به ریال)
	Amount int32 `json:"amount"`
	// result
	Result int32 `json:"result"`
	// verify status
	Status int32 `json:"status"`
	// refrence number
	RefNumber *string `json:"refNumber,omitempty"`
	// transaction description
	Description *string `json:"description,omitempty"`
	// Masked bank card
	CardNumber string `json:"cardNumber"`
	// order id
	OrderId *string `json:"orderId,omitempty"`
	// message
	Message string `json:"message"`
}

type _PaymentVerifyResponse PaymentVerifyResponse

// NewPaymentVerifyResponse instantiates a new PaymentVerifyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentVerifyResponse(amount int32, result int32, status int32, cardNumber string, message string) *PaymentVerifyResponse {
	this := PaymentVerifyResponse{}
	this.Amount = amount
	this.Result = result
	this.Status = status
	this.CardNumber = cardNumber
	this.Message = message
	return &this
}

// NewPaymentVerifyResponseWithDefaults instantiates a new PaymentVerifyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentVerifyResponseWithDefaults() *PaymentVerifyResponse {
	this := PaymentVerifyResponse{}
	return &this
}

// GetPaidAt returns the PaidAt field value if set, zero value otherwise.
func (o *PaymentVerifyResponse) GetPaidAt() time.Time {
	if o == nil || IsNil(o.PaidAt) {
		var ret time.Time
		return ret
	}
	return *o.PaidAt
}

// GetPaidAtOk returns a tuple with the PaidAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetPaidAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PaidAt) {
		return nil, false
	}
	return o.PaidAt, true
}

// HasPaidAt returns a boolean if a field has been set.
func (o *PaymentVerifyResponse) HasPaidAt() bool {
	if o != nil && !IsNil(o.PaidAt) {
		return true
	}

	return false
}

// SetPaidAt gets a reference to the given time.Time and assigns it to the PaidAt field.
func (o *PaymentVerifyResponse) SetPaidAt(v time.Time) {
	o.PaidAt = &v
}

// GetAmount returns the Amount field value
func (o *PaymentVerifyResponse) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PaymentVerifyResponse) SetAmount(v int32) {
	o.Amount = v
}

// GetResult returns the Result field value
func (o *PaymentVerifyResponse) GetResult() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetResultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *PaymentVerifyResponse) SetResult(v int32) {
	o.Result = v
}

// GetStatus returns the Status field value
func (o *PaymentVerifyResponse) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PaymentVerifyResponse) SetStatus(v int32) {
	o.Status = v
}

// GetRefNumber returns the RefNumber field value if set, zero value otherwise.
func (o *PaymentVerifyResponse) GetRefNumber() string {
	if o == nil || IsNil(o.RefNumber) {
		var ret string
		return ret
	}
	return *o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetRefNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RefNumber) {
		return nil, false
	}
	return o.RefNumber, true
}

// HasRefNumber returns a boolean if a field has been set.
func (o *PaymentVerifyResponse) HasRefNumber() bool {
	if o != nil && !IsNil(o.RefNumber) {
		return true
	}

	return false
}

// SetRefNumber gets a reference to the given string and assigns it to the RefNumber field.
func (o *PaymentVerifyResponse) SetRefNumber(v string) {
	o.RefNumber = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentVerifyResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentVerifyResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentVerifyResponse) SetDescription(v string) {
	o.Description = &v
}

// GetCardNumber returns the CardNumber field value
func (o *PaymentVerifyResponse) GetCardNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetCardNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardNumber, true
}

// SetCardNumber sets field value
func (o *PaymentVerifyResponse) SetCardNumber(v string) {
	o.CardNumber = v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *PaymentVerifyResponse) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *PaymentVerifyResponse) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *PaymentVerifyResponse) SetOrderId(v string) {
	o.OrderId = &v
}

// GetMessage returns the Message field value
func (o *PaymentVerifyResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PaymentVerifyResponse) SetMessage(v string) {
	o.Message = v
}

func (o PaymentVerifyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentVerifyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaidAt) {
		toSerialize["paidAt"] = o.PaidAt
	}
	toSerialize["amount"] = o.Amount
	toSerialize["result"] = o.Result
	toSerialize["status"] = o.Status
	if !IsNil(o.RefNumber) {
		toSerialize["refNumber"] = o.RefNumber
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["cardNumber"] = o.CardNumber
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *PaymentVerifyResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"result",
		"status",
		"cardNumber",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentVerifyResponse := _PaymentVerifyResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentVerifyResponse)

	if err != nil {
		return err
	}

	*o = PaymentVerifyResponse(varPaymentVerifyResponse)

	return err
}

type NullablePaymentVerifyResponse struct {
	value *PaymentVerifyResponse
	isSet bool
}

func (v NullablePaymentVerifyResponse) Get() *PaymentVerifyResponse {
	return v.value
}

func (v *NullablePaymentVerifyResponse) Set(val *PaymentVerifyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentVerifyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentVerifyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentVerifyResponse(val *PaymentVerifyResponse) *NullablePaymentVerifyResponse {
	return &NullablePaymentVerifyResponse{value: val, isSet: true}
}

func (v NullablePaymentVerifyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentVerifyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


