/*
Zibal API

Combined API for Zibal Gateway and Facilities (Verification, Wallet, etc.)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zibal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentInitRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentInitRequest{}

// PaymentInitRequest struct for PaymentInitRequest
type PaymentInitRequest struct {
	Merchant string `json:"merchant"`
	Amount int64 `json:"amount"`
	CallbackUrl string `json:"callbackUrl"`
	Description *string `json:"description,omitempty"`
	OrderId *string `json:"orderId,omitempty"`
	Mobile *string `json:"mobile,omitempty"`
	AllowedCards []string `json:"allowedCards,omitempty"`
	LedgerId *string `json:"ledgerId,omitempty"`
	NationalCode *string `json:"nationalCode,omitempty"`
	CheckMobileWithCard *bool `json:"checkMobileWithCard,omitempty"`
}

type _PaymentInitRequest PaymentInitRequest

// NewPaymentInitRequest instantiates a new PaymentInitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInitRequest(merchant string, amount int64, callbackUrl string) *PaymentInitRequest {
	this := PaymentInitRequest{}
	this.Merchant = merchant
	this.Amount = amount
	this.CallbackUrl = callbackUrl
	return &this
}

// NewPaymentInitRequestWithDefaults instantiates a new PaymentInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInitRequestWithDefaults() *PaymentInitRequest {
	this := PaymentInitRequest{}
	return &this
}

// GetMerchant returns the Merchant field value
func (o *PaymentInitRequest) GetMerchant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetMerchantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Merchant, true
}

// SetMerchant sets field value
func (o *PaymentInitRequest) SetMerchant(v string) {
	o.Merchant = v
}

// GetAmount returns the Amount field value
func (o *PaymentInitRequest) GetAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PaymentInitRequest) SetAmount(v int64) {
	o.Amount = v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *PaymentInitRequest) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *PaymentInitRequest) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentInitRequest) SetDescription(v string) {
	o.Description = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *PaymentInitRequest) SetOrderId(v string) {
	o.OrderId = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *PaymentInitRequest) SetMobile(v string) {
	o.Mobile = &v
}

// GetAllowedCards returns the AllowedCards field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetAllowedCards() []string {
	if o == nil || IsNil(o.AllowedCards) {
		var ret []string
		return ret
	}
	return o.AllowedCards
}

// GetAllowedCardsOk returns a tuple with the AllowedCards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetAllowedCardsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedCards) {
		return nil, false
	}
	return o.AllowedCards, true
}

// HasAllowedCards returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasAllowedCards() bool {
	if o != nil && !IsNil(o.AllowedCards) {
		return true
	}

	return false
}

// SetAllowedCards gets a reference to the given []string and assigns it to the AllowedCards field.
func (o *PaymentInitRequest) SetAllowedCards(v []string) {
	o.AllowedCards = v
}

// GetLedgerId returns the LedgerId field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetLedgerId() string {
	if o == nil || IsNil(o.LedgerId) {
		var ret string
		return ret
	}
	return *o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetLedgerIdOk() (*string, bool) {
	if o == nil || IsNil(o.LedgerId) {
		return nil, false
	}
	return o.LedgerId, true
}

// HasLedgerId returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasLedgerId() bool {
	if o != nil && !IsNil(o.LedgerId) {
		return true
	}

	return false
}

// SetLedgerId gets a reference to the given string and assigns it to the LedgerId field.
func (o *PaymentInitRequest) SetLedgerId(v string) {
	o.LedgerId = &v
}

// GetNationalCode returns the NationalCode field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetNationalCode() string {
	if o == nil || IsNil(o.NationalCode) {
		var ret string
		return ret
	}
	return *o.NationalCode
}

// GetNationalCodeOk returns a tuple with the NationalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetNationalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.NationalCode) {
		return nil, false
	}
	return o.NationalCode, true
}

// HasNationalCode returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasNationalCode() bool {
	if o != nil && !IsNil(o.NationalCode) {
		return true
	}

	return false
}

// SetNationalCode gets a reference to the given string and assigns it to the NationalCode field.
func (o *PaymentInitRequest) SetNationalCode(v string) {
	o.NationalCode = &v
}

// GetCheckMobileWithCard returns the CheckMobileWithCard field value if set, zero value otherwise.
func (o *PaymentInitRequest) GetCheckMobileWithCard() bool {
	if o == nil || IsNil(o.CheckMobileWithCard) {
		var ret bool
		return ret
	}
	return *o.CheckMobileWithCard
}

// GetCheckMobileWithCardOk returns a tuple with the CheckMobileWithCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitRequest) GetCheckMobileWithCardOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckMobileWithCard) {
		return nil, false
	}
	return o.CheckMobileWithCard, true
}

// HasCheckMobileWithCard returns a boolean if a field has been set.
func (o *PaymentInitRequest) HasCheckMobileWithCard() bool {
	if o != nil && !IsNil(o.CheckMobileWithCard) {
		return true
	}

	return false
}

// SetCheckMobileWithCard gets a reference to the given bool and assigns it to the CheckMobileWithCard field.
func (o *PaymentInitRequest) SetCheckMobileWithCard(v bool) {
	o.CheckMobileWithCard = &v
}

func (o PaymentInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentInitRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["merchant"] = o.Merchant
	toSerialize["amount"] = o.Amount
	toSerialize["callbackUrl"] = o.CallbackUrl
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.AllowedCards) {
		toSerialize["allowedCards"] = o.AllowedCards
	}
	if !IsNil(o.LedgerId) {
		toSerialize["ledgerId"] = o.LedgerId
	}
	if !IsNil(o.NationalCode) {
		toSerialize["nationalCode"] = o.NationalCode
	}
	if !IsNil(o.CheckMobileWithCard) {
		toSerialize["checkMobileWithCard"] = o.CheckMobileWithCard
	}
	return toSerialize, nil
}

func (o *PaymentInitRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"merchant",
		"amount",
		"callbackUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentInitRequest := _PaymentInitRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentInitRequest)

	if err != nil {
		return err
	}

	*o = PaymentInitRequest(varPaymentInitRequest)

	return err
}

type NullablePaymentInitRequest struct {
	value *PaymentInitRequest
	isSet bool
}

func (v NullablePaymentInitRequest) Get() *PaymentInitRequest {
	return v.value
}

func (v *NullablePaymentInitRequest) Set(val *PaymentInitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInitRequest(val *PaymentInitRequest) *NullablePaymentInitRequest {
	return &NullablePaymentInitRequest{value: val, isSet: true}
}

func (v NullablePaymentInitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


