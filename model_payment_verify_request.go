/*
Zibal API

Combined API for Zibal Gateway and Facilities (Verification, Wallet, etc.)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zibal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentVerifyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentVerifyRequest{}

// PaymentVerifyRequest struct for PaymentVerifyRequest
type PaymentVerifyRequest struct {
	Merchant string `json:"merchant"`
	TrackId int64 `json:"trackId"`
}

type _PaymentVerifyRequest PaymentVerifyRequest

// NewPaymentVerifyRequest instantiates a new PaymentVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentVerifyRequest(merchant string, trackId int64) *PaymentVerifyRequest {
	this := PaymentVerifyRequest{}
	this.Merchant = merchant
	this.TrackId = trackId
	return &this
}

// NewPaymentVerifyRequestWithDefaults instantiates a new PaymentVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentVerifyRequestWithDefaults() *PaymentVerifyRequest {
	this := PaymentVerifyRequest{}
	return &this
}

// GetMerchant returns the Merchant field value
func (o *PaymentVerifyRequest) GetMerchant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyRequest) GetMerchantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Merchant, true
}

// SetMerchant sets field value
func (o *PaymentVerifyRequest) SetMerchant(v string) {
	o.Merchant = v
}

// GetTrackId returns the TrackId field value
func (o *PaymentVerifyRequest) GetTrackId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TrackId
}

// GetTrackIdOk returns a tuple with the TrackId field value
// and a boolean to check if the value has been set.
func (o *PaymentVerifyRequest) GetTrackIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackId, true
}

// SetTrackId sets field value
func (o *PaymentVerifyRequest) SetTrackId(v int64) {
	o.TrackId = v
}

func (o PaymentVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentVerifyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["merchant"] = o.Merchant
	toSerialize["trackId"] = o.TrackId
	return toSerialize, nil
}

func (o *PaymentVerifyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"merchant",
		"trackId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentVerifyRequest := _PaymentVerifyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentVerifyRequest)

	if err != nil {
		return err
	}

	*o = PaymentVerifyRequest(varPaymentVerifyRequest)

	return err
}

type NullablePaymentVerifyRequest struct {
	value *PaymentVerifyRequest
	isSet bool
}

func (v NullablePaymentVerifyRequest) Get() *PaymentVerifyRequest {
	return v.value
}

func (v *NullablePaymentVerifyRequest) Set(val *PaymentVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentVerifyRequest(val *PaymentVerifyRequest) *NullablePaymentVerifyRequest {
	return &NullablePaymentVerifyRequest{value: val, isSet: true}
}

func (v NullablePaymentVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


